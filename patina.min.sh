#!/usr/bin/env bash
# shellcheck source=/dev/null disable=SC2154
readonly patina_metadata_version='0.7.7';readonly patina_metadata_codename='Duchess';readonly patina_metadata_url='https://github.com/ultraviolet-1986/patina';export readonly PE0000='PE0000: Patina has encountered an unknown error.';export readonly PE0001='PE0001: Patina has not been given an expected argument.';export readonly PE0002='PE0002: Patina has been given too many arguments.';export readonly PE0003='PE0003: Patina has not been given a valid argument.';export readonly PE0004='PE0004: Patina cannot find the directory specified.';export readonly PE0005='PE0005: Patina cannot find the file specified.';export readonly PE0006='PE0006: Patina could not detect a required application.';export readonly PE0007='PE0007: Patina has not connected any components.';export readonly PE0008='PE0008: Patina does not have access to the Internet.';export readonly PE0009='PE0009: Patina cannot detect a valid source control repository.';export readonly PE0010='PE0010: Patina cannot access a required variable.';export readonly PE0011='PE0011: Patina cannot overwrite a pre-existing file.';export readonly PE0012='PE0012: Patina cannot overwrite a pre-existing directory.';export readonly PE0013='PE0013: Patina cannot execute this command under this environment.';patina_path_root="$(cd "$(dirname "${BASH_SOURCE[0]}")"&&pwd)";export readonly patina_path_root;export readonly patina_path_configuration="$HOME/.config/patina";export readonly patina_file_configuration="$patina_path_configuration/patina.conf";export readonly patina_file_source="${BASH_SOURCE[0]}";export readonly patina_path_components="$patina_path_root/components";export readonly patina_path_components_applications="$patina_path_components/applications";export readonly patina_path_components_places="$patina_path_components/places";export readonly patina_path_components_system="$patina_path_components/system";export readonly patina_path_components_user="$patina_path_components/user";export readonly patina_path_resources="$patina_path_root/resources";export readonly patina_path_resources_help="$patina_path_resources/help";readonly system_os_release='/etc/os-release';readonly system_lsb_release='/etc/lsb-release';patina_start(){ if [ "$OSTYPE" != 'linux-gnu' ];then echo_wrap "Patina does not currently support your operating system. For more information, or to make a feature request, please visit '$patina_metadata_url'.";return;fi;if [ -f "$system_os_release" ];then source "$system_os_release";fi;if [ -f "$system_lsb_release" ];then source "$system_lsb_release";fi;mkdir -p "$patina_path_configuration";mkdir -p "$patina_path_components"/{applications,places,system,user};mkdir -p "$patina_path_resources/help";if [ -f "$patina_file_configuration" ];then chmod a-x "$patina_file_configuration";source "$patina_file_configuration";else patina_create_configuration_file;fi;for component in "$patina_path_components"/{applications,places,system,user}/patina_*.sh;do if [ -f "$component" ];then source "$component";patina_components_list+=("${component}");fi;done;echo_wrap "${patina_major_color}Patina ${patina_metadata_version} '${patina_metadata_codename}' / BASH ${BASH_VERSION%%[^0-9.]*}${color_reset}";echo_wrap "${patina_major_color}Copyright (C) 2019 William Whinn${color_reset}";echo_wrap "${patina_minor_color}$patina_metadata_url${color_reset}\\n";readonly -a patina_components_list;readonly TERM="$TERM";readonly OSTYPE="$OSTYPE";unset -f "${FUNCNAME[0]}";};patina_create_configuration_file(){ echo 'patina_theme=default'>"$patina_file_configuration";patina_terminal_refresh;};patina_list_connected_components(){ if [ "$#" -ge 1 ];then patina_throw_exception 'PE0002';elif [[ -n "${patina_components_list[*]}" ]];then if(command -v 'tree'>/dev/null 2>&1);then echo_wrap "\\nPatina has connected the following ${#patina_components_list[@]} component(s):\\n";tree --sort=name --dirsfirst --noreport --prune -P patina_*.sh "$patina_path_components";echo;else echo_wrap "\\nPatina has connected the following ${#patina_components_list[@]} component(s):\\n";for component in "${patina_components_list[@]}";do echo_wrap "$(basename "$component")";done;echo;return;fi;else patina_throw_exception 'PE0007';fi;};patina_throw_exception(){ if [ "$#" -eq "0" ];then patina_throw_exception 'PE0001';elif [ "$#" -gt 1 ];then patina_throw_exception 'PE0002';elif [[ "$1" =~ [P][E][0-9][0-9][0-9][0-9] ]];then echo_wrap "${!1}";return;else patina_throw_exception 'PE0000';fi;};patina_open_folder(){ if [ "$#" -eq "0" ];then patina_throw_exception 'PE0001';elif [ "$#" -gt 2 ];then patina_throw_exception 'PE0002';elif [ -n "$2" ]&&[ "$2" != '-g' ];then patina_throw_exception 'PE0003';elif [ -f "$1" ];then patina_throw_exception 'PE0003';elif [ ! -d "$1" ];then patina_throw_exception 'PE0004';elif [ -d "$1" ]&&[ -z "$2" ];then cd "$1"||return;return;elif [ -d "$1" ]&&[ "$2" = '-g' ];then cd "$1"||return;if(command -v 'xdg-open'>/dev/null 2>&1);then xdg-open "$(pwd)">/dev/null 2>&1;fi;return;else patina_throw_exception 'PE0000';fi;};patina_open_folder_graphically(){ if [ "$#" -eq "0" ];then patina_open_folder "$HOME" -g>/dev/null 2>&1;return;elif [ "$XDG_SESSION_TYPE" = 'tty' ];then patina_throw_exception 'PE0013';elif [ "$#" -gt 1 ];then patina_throw_exception 'PE0002';elif [ -f "$1" ];then patina_throw_exception 'PE0003';elif [ ! -d "$1" ];then patina_throw_exception 'PE0004';elif [ -d "$1" ];then patina_open_folder "$1" -g>/dev/null 2>&1;return;else patina_throw_exception 'PE0000';fi;};generate_date_stamp(){ date --utc +%Y%m%dT%H%M%SZ;};echo_wrap(){ if [ "$#" -eq "0" ];then patina_throw_exception 'PE0001';elif [ "$#" -gt 1 ];then patina_throw_exception 'PE0002';elif [ -n "$1" ];then(echo -e "$1")|fmt -w "$(tput cols)";else patina_throw_exception 'PE0000';fi;};to_lower(){ if [ "$#" -eq "0" ];then patina_throw_exception 'PE0001';elif [ "$#" -gt 1 ];then patina_throw_exception 'PE0002';elif [ -n "$1" ];then echo -e "$1"|tr '[:upper:]' '[:lower:]';return;else patina_throw_exception 'PE0000';fi;};to_upper(){ if [ "$#" -eq "0" ];then patina_throw_exception 'PE0001';elif [ "$#" -gt 1 ];then patina_throw_exception 'PE0002';elif [ -n "$1" ];then echo -e "$1"|tr '[:lower:]' '[:upper:]';return;else patina_throw_exception 'PE0000';fi;};generate_uuid(){ local label_command_6="head /dev/urandom | tr -dc A-Za-z0-9 | head -c6";local label_command_4="head /dev/urandom | tr -dc A-Za-z0-9 | head -c4";echo -e "$(eval "$label_command_6";printf '-';eval "$label_command_4";printf '-';eval "$label_command_4";printf '-';eval "$label_command_4";printf '-';eval "$label_command_4";printf '-';eval "$label_command_4";printf '-';eval "$label_command_6";)";};patina_terminal_refresh(){ cd||return;clear;reset;exec bash;};patina_terminal_reset(){ cd||return;clear;history -c;true>~/.bash_history;reset;exec bash;};export -f 'echo_wrap';export -f 'generate_date_stamp';export -f 'patina_throw_exception';export -f 'to_lower';export -f 'to_upper';export -f 'generate_uuid';alias 'p-help'='less $patina_path_root/README.md';alias 'p-list'='patina_list_connected_components';alias 'p-refresh'='patina_terminal_refresh';alias 'p-reset'='patina_terminal_reset';alias 'files'='patina_open_folder_graphically';alias 'p-root'='patina_open_folder $patina_path_root';alias 'p-c'='patina_open_folder $patina_path_components';alias 'p-c-applications'='patina_open_folder $patina_path_components_applications';alias 'p-c-places'='patina_open_folder $patina_path_components_places';alias 'p-c-system'='patina_open_folder $patina_path_components_system';alias 'p-c-user'='patina_open_folder $patina_path_components_user';alias 'p-r'='patina_open_folder $patina_path_resources';alias 'p-r-help'='patina_open_folder $patina_path_resources_help';alias 'p-uuid'='generate_uuid';patina_start
